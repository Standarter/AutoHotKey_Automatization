from tkinter import *
import os
AutoHotKeyWindow = Tk()
AutoHotKeyWindow.geometry("1200x400+" + str(AutoHotKeyWindow.winfo_screenwidth()//2-1200//2) + "+" + str(AutoHotKeyWindow.winfo_screenheight()//2 - 400//2))
AutoHotKeyWindow.title("AutoHotKey_Automatize (DefaultDF)")
AutoHotKeyWindow.resizable(width=False, height=False)
CurrentPath = "\\".join(__file__.split("\\")[:-1]) + "\\"
ConfigDirectory = "Config"
AdvancedRightClick = BooleanVar()
AdvancedRightClick.set(1)
SleepDelay = 64
MenuSelectedKey = ""
if os.path.exists(CurrentPath + ConfigDirectory) == False:
    os.mkdir(CurrentPath + ConfigDirectory)
if os.path.exists(CurrentPath + "CompiledConfigs") == False:
    os.mkdir(CurrentPath + "CompiledConfigs")
if os.path.exists(CurrentPath + "ConfigCompilator") == False:
    os.mkdir(CurrentPath + "ConfigCompilator")
for i in range(1, 6):
    if os.path.exists(CurrentPath + ConfigDirectory + "\\" + "Profile{0}.ahk".format(i)) == False:
        ConfigCreate = open(CurrentPath + ConfigDirectory + "\\" + "Profile{0}.ahk".format(i), "w")
        ConfigCreate.close()
def OnCloseWindow():
    global AutoHotKeyWindow, AutoHotKeyTextEditor
    os.system("TASKKILL /F /IM " + "AutoHotKey_Profile{0}.exe".format(CurrentPreset))
    AutoHotKeyWindow.destroy()
AutoHotKeyWindow.protocol("WM_DELETE_WINDOW", OnCloseWindow)
CurrentPreset = 1
HotkeyStarted = False
# CanvasWindow
CanvasWindow = Canvas(AutoHotKeyWindow)
CanvasWindow.place(x=0, y=0, width=1000, height=400)
CanvasWindow.create_rectangle(0, 0, 1000, 400, fill='darkgrey')
CanvasWindow.create_line(0, 70, 1000, 70, width=2)
CanvasWindow.create_line(200, 0, 200, 70, width=2)
# Entry
(TextField := Text(AutoHotKeyWindow, bg="white", undo=True, wrap=NONE, tabs=4)).place(x = 1000, y = 0, width=180, height=380)
TextFieldMenu = Menu(AutoHotKeyWindow, tearoff=0)
TextFieldMenu.add_command(label="Add function", command=lambda: TextField.insert(INSERT, "::\nreturn"))
TextFieldMenu.add_command(label="Add IF", command=lambda: TextField.insert(INSERT, "if ()\n{\n\n}\n"))
TextFieldMenu.add_command(label="Add LOOP", command=lambda: TextField.insert(INSERT, "Loop\n{\n\n}\n"))
TextFieldMenu.add_command(label="Add break", command=lambda: TextField.insert(INSERT, "break"))
TextFieldMenu.add_command(label="Add Sleep", command=lambda: TextField.insert(INSERT, "Sleep " + str(SleepDelay)))
TextFieldMenu.add_command(label="Add return", command=lambda: TextField.insert(INSERT, "return"))
TextFieldMenu.add_command(label="Add &", command=lambda: TextField.insert(INSERT, " & "))
TextFieldMenu.add_command(label="Add and", command=lambda: TextField.insert(INSERT, "and"))
TextFieldMenu.add_command(label="Add or", command=lambda: TextField.insert(INSERT, " or "))
TextFieldMenu.add_command(label="Add ::", command=lambda: TextField.insert(INSERT, "::"))
def OpenMenuTextFieldMenu(event):
    global TextFieldMenu
    TextFieldMenu.post(event.x_root, event.y_root)
TextField.bind("<Button-3>", OpenMenuTextFieldMenu)
SB_V = Scrollbar(AutoHotKeyWindow, orient=VERTICAL)
SB_V.pack(side=RIGHT, fill=Y)
TextField.config(yscrollcommand=SB_V.set)
SB_V.config(command=TextField.yview)
SB_H = Scrollbar(AutoHotKeyWindow, orient=HORIZONTAL)
SB_H.place(x=1000, y=380, width=180, height=20)
TextField.config(xscrollcommand=SB_H.set)
SB_H.config(command=TextField.xview)
TextField.delete(1.0, END)
ConfigReader = open(CurrentPath + ConfigDirectory + "\\" + "Profile{0}.ahk".format(CurrentPreset), "r")
TextField.insert(1.0, "".join(ConfigReader.readlines()))
ConfigReader.close()
# Menu
def MenuFunctionCreate():
    global TextField, MenuSelectedKey
    key_name = MenuSelectedKey
    TextField.insert(TextField.index(INSERT), key_name + "::" + '\n')
    TextField.insert(TextField.index(INSERT), '\n')
    TextField.insert(TextField.index(INSERT), "return" + '\n')
def SingleClick():
    global MenuSelectedKey, SleepDelay
    TextField.insert(TextField.index(INSERT), "Sendinput, {" + MenuSelectedKey + "}" + '\n')
    TextField.insert(TextField.index(INSERT), "Sleep " + str(SleepDelay) + '\n')
def KeyDownFunc():
    global MenuSelectedKey, SleepDelay
    TextField.insert(TextField.index(INSERT), "Sendinput, {" + MenuSelectedKey + " Down}" + '\n')
    TextField.insert(TextField.index(INSERT), "Sleep " + str(SleepDelay) + '\n')
def KeyUpFunc():
    global MenuSelectedKey, SleepDelay
    TextField.insert(TextField.index(INSERT), "Sendinput, {" + MenuSelectedKey + " Up}" + '\n')
    TextField.insert(TextField.index(INSERT), "Sleep " + str(SleepDelay) + '\n')
def ThisKeyName():
    global MenuSelectedKey
    TextField.insert(TextField.index(INSERT), MenuSelectedKey)
def GetKeyStateFunc():
    global MenuSelectedKey
    TextField.insert(TextField.index(INSERT), "GetKeyState(\"{0}\", \"P\")".format(MenuSelectedKey))
def GetNotKeyStateFunc():
    global MenuSelectedKey
    TextField.insert(TextField.index(INSERT), "!GetKeyState(\"{0}\", \"P\")".format(MenuSelectedKey))
RightClickMenu = Menu(AutoHotKeyWindow, tearoff=0)
RightClickMenu.add_command(label="Function SingleClick()", command=SingleClick)
RightClickMenu.add_command(label="Function KeyDown()", command=KeyDownFunc)
RightClickMenu.add_command(label="Function KeyUp()", command=KeyUpFunc)
RightClickMenu.add_command(label="Function CreateMacros()", command=MenuFunctionCreate)
RightClickMenu.add_command(label="Function GetKeyState()", command=GetKeyStateFunc)
RightClickMenu.add_command(label="Function !GetKeyState()", command=GetNotKeyStateFunc)
RightClickMenu.add_command(label="Function GetName()", command=ThisKeyName)
# Key Press Callback
def KeyPressLeft(event, key_name):
    global TextField, SleepDelay
    TextField.insert(TextField.index(INSERT), "Sendinput, {" + key_name + " Down}" + '\n')
    TextField.insert(TextField.index(INSERT), "Sleep {0}".format(SleepDelay) + '\n')
    TextField.insert(TextField.index(INSERT), "Sendinput, {" + key_name + " Up}" + '\n')
    TextField.insert(TextField.index(INSERT), "Sleep {0}".format(SleepDelay) + '\n')
def KeyPressRight(event, key_name):
    global TextField, AdvancedRightClick, RightClickMenu, MenuSelectedKey
    if AdvancedRightClick.get() == False:
        TextField.insert(TextField.index(INSERT), key_name + "::" + '\n')
        TextField.insert(TextField.index(INSERT), '\n')
        TextField.insert(TextField.index(INSERT), "return" + '\n')
    else:
        RightClickMenu.post(event.x_root, event.y_root)
        MenuSelectedKey = key_name
# PresetsLabel
PresetsLabel = Label(AutoHotKeyWindow, text="Presets " + "(Current preset: " + str(CurrentPreset) + ")", bg="darkgrey").place(x = 10 + 0*(30 + 5), y = 0, width=170, height=30)
# Change Preset
def SetPreset(event, all_presets, config_id):
    global CurrentPreset, PresetsLabel, TextField, HotkeyStarted
    if HotkeyStarted == False:
        CurrentPreset = int(event.widget.cget("text"))
        PresetsLabel = Label(AutoHotKeyWindow, bg="darkgrey", text="Presets " + "(Current preset: " + str(CurrentPreset) + ")").place(x = 10 + 0*(30 + 5), y = 0, width=170, height=30)
        for Button in all_presets:
            Button.config(bg="grey")
        event.widget.config(bg="lightgreen")
        TextField.delete(1.0, END)
        ConfigReader = open(CurrentPath + ConfigDirectory + "\\" + "Profile{0}.ahk".format(config_id), "r")
        TextField.insert(1.0, "".join(ConfigReader.readlines()))
        ConfigReader.close()
# Button
Preset1 = Button(AutoHotKeyWindow, text = '1', bg="lightgreen")
Preset1.place(x = 10 + 0*(30 + 5), y = 30, width=30, height=30)
# Button
Preset2 = Button(AutoHotKeyWindow, text = '2', bg="grey")
Preset2.place(x = 10 + 1*(30 + 5), y = 30, width=30, height=30)
# Button
Preset3 = Button(AutoHotKeyWindow, text = '3', bg="grey")
Preset3.place(x = 10 + 2*(30 + 5), y = 30, width=30, height=30)
# Button
Preset4 = Button(AutoHotKeyWindow, text = '4', bg="grey")
Preset4.place(x = 10 + 3*(30 + 5), y = 30, width=30, height=30)
# Button
Preset5 = Button(AutoHotKeyWindow, text = '5', bg="grey")
Preset5.place(x = 10 + 4*(30 + 5), y = 30, width=30, height=30)
# All Buttons
All_Buttons = [Preset1, Preset2, Preset3, Preset4, Preset5]
# Button Binds
Preset1.bind("<Button-1>", lambda event, all_presets=All_Buttons, config_id=1: SetPreset(event=event, all_presets=all_presets, config_id=config_id))
Preset2.bind("<Button-1>", lambda event, all_presets=All_Buttons, config_id=2: SetPreset(event=event, all_presets=all_presets, config_id=config_id))
Preset3.bind("<Button-1>", lambda event, all_presets=All_Buttons, config_id=3: SetPreset(event=event, all_presets=all_presets, config_id=config_id))
Preset4.bind("<Button-1>", lambda event, all_presets=All_Buttons, config_id=4: SetPreset(event=event, all_presets=all_presets, config_id=config_id))
Preset5.bind("<Button-1>", lambda event, all_presets=All_Buttons, config_id=5: SetPreset(event=event, all_presets=all_presets, config_id=config_id))
# Program Buttons
def SavePreset_Callback(event):
    global CurrentPreset, TextField
    event.widget.config(bg="grey")
    PresetSaver = open(CurrentPath + ConfigDirectory + "\\" + "Profile{0}.ahk".format(CurrentPreset), "w")
    PresetSaver.write(TextField.get(1.0, END))
    PresetSaver.close()
def ResetPreset_Callback(event):
    global TextField
    TextField.delete(1.0, END)
def UndoPreset_Callback(event):
    global TextField
    try: TextField.edit_undo()
    except: pass
def RedoPreset_Callback(event):
    global TextField
    try: TextField.edit_redo()
    except: pass
def LoadPreset_Callback(event):
    global CurrentPreset, HotkeyStarted
    if event.widget.cget("text") == "Start":
        HotkeyStarted = True
        event.widget.config(text="Stop")
        PresetSaver = open(CurrentPath + ConfigDirectory + "\\" + "Profile{0}.ahk".format(CurrentPreset), "w")
        PresetSaver.write(TextField.get(1.0, END))
        PresetSaver.close()
        if os.path.exists(CurrentPath + "CompiledConfigs" + "\\" + "AutoHotKey_Profile{0}.exe".format(CurrentPreset)):
            os.remove(CurrentPath + "CompiledConfigs" + "\\" + "AutoHotKey_Profile{0}.exe".format(CurrentPreset))
        os.system(CurrentPath + "ConfigCompilator\\" + "Ahk2Exe.exe /in " + CurrentPath + "Config\\" + "Profile{0}.ahk".format(CurrentPreset) + " /out " + CurrentPath + "CompiledConfigs\\" + "AutoHotKey_Profile{0}.exe".format(CurrentPreset))
        os.system("start /b " + CurrentPath + "CompiledConfigs\\" + "AutoHotKey_Profile{0}.exe".format(CurrentPreset))
    else:
        HotkeyStarted = False
        event.widget.config(text="Start")
        os.system("TASKKILL /F /IM " + "AutoHotKey_Profile{0}.exe".format(CurrentPreset))
SavePreset = Button(AutoHotKeyWindow, text = 'Save Preset', bg="grey")
SavePreset.place(x = 210 + 0*(80 + 5), y = 10 + 0*(5 + 25), width=80, height=25)
SavePreset.bind("<Button-1>", SavePreset_Callback)
ResetPreset = Button(AutoHotKeyWindow, text = 'Reset Preset', bg="grey")
ResetPreset.place(x = 210 + 0*(80 + 5), y = 10 + 1*(5 + 25), width=80, height=25)
ResetPreset.bind("<Button-1>", ResetPreset_Callback)
UndoPreset = Button(AutoHotKeyWindow, text = 'Undo Preset', bg="grey")
UndoPreset.place(x = 210 + 1*(80 + 5), y = 10 + 0*(5 + 25), width=80, height=25)
UndoPreset.bind("<Button-1>", UndoPreset_Callback)
RedoPreset = Button(AutoHotKeyWindow, text = 'Redo Preset', bg="grey")
RedoPreset.place(x = 210 + 1*(80 + 5), y = 10 + 1*(5 + 25), width=80, height=25)
RedoPreset.bind("<Button-1>", RedoPreset_Callback)
ARC_CheckButton = Checkbutton(AutoHotKeyWindow, text="Advanced RC", variable=AdvancedRightClick, onvalue=1, offvalue=0)
ARC_CheckButton.place(x = 210 + 2*(80 + 5), y = 10 + 0*(5 + 25), width=120, height=25)
ARC_CheckButton.config(bg="grey")
Label(AutoHotKeyWindow, text="Delay: ", bg="grey").place(x = 210 + 2*(80 + 5), y = 10 + 1*(5 + 25), width=120, height=25)
SleepEntry = Entry(AutoHotKeyWindow)
SleepEntry.insert(END, str(SleepDelay))
SleepEntry.place(x = 210 + 3.5*(80 + 5), y = 10 + 0*(5 + 25), width=120, height=25)
def ApplyEvent(event):
    global SleepEntry, SleepDelay
    if len(SleepEntry.get()) != 0:
        try: 
            int(SleepEntry.get())
        except: pass
        SleepDelay = int(SleepEntry.get())
Label(AutoHotKeyWindow, text="Send Text: ", bg="grey").place(x = 210 + 5*(80 + 5), y = 10 + 0*(5 + 25), width=120, height=25)
SleepEntry1 = Entry(AutoHotKeyWindow)
SleepEntry1.place(x = 210 + 5*(80 + 5), y = 10 + 1*(5 + 25), width=245, height=25)
def SendText(event):
    global TextField, SleepEntry, SleepDelay
    TextField.insert(INSERT, "Send, " + SleepEntry1.get() + '\n')
    TextField.insert(INSERT, "Sleep " + str(SleepDelay) + '\n')
ApplyButton1 = Button(AutoHotKeyWindow, text="Send", bg="grey")
ApplyButton1.bind("<Button-1>", SendText)
ApplyButton1.place(x = 210 + 5*(80 + 5) + 125, y = 10 + 0*(5 + 25), width=120, height=25)
ApplyButton = Button(AutoHotKeyWindow, text="Apply", bg="grey")
ApplyButton.place(x = 210 + 3.5*(80 + 5), y = 10 + 1*(5 + 25), width=120, height=25)
ApplyButton.bind("<Button-1>", ApplyEvent)
LoadPreset = Button(AutoHotKeyWindow, text = 'Start', bg="grey")
LoadPreset.place(x = 1000 - 105 + 0*(80 + 5) - 5, y = 10 + 0*(5 + 25), width=100, height=50)
LoadPreset.bind("<Button-1>", LoadPreset_Callback)
#Keyboard
(KeyESC := Button(AutoHotKeyWindow, text = 'ESC', bg="grey")).place(x = 10 + 0*(5 + 30), y = 90 + 0*(5 + 30), width= 30, height= 30)
KeyESC.bind("<Button-1>", lambda event, args="ESC": KeyPressLeft(event=event, key_name=args))
KeyESC.bind("<Button-3>", lambda event, args="ESC": KeyPressRight(event=event, key_name=args))
# F1-F4
(KeyF1 := Button(AutoHotKeyWindow, text = 'F1', bg="grey")).place(x = 20 + 1*(5 + 30), y = 90 + 0*(5 + 30), width= 30, height= 30)
KeyF1.bind("<Button-1>", lambda event, args="F1": KeyPressLeft(event=event, key_name=args))
KeyF1.bind("<Button-3>", lambda event, args="F1": KeyPressRight(event=event, key_name=args))
(KeyF2 := Button(AutoHotKeyWindow, text = 'F2', bg="grey")).place(x = 20 + 2*(5 + 30), y = 90 + 0*(5 + 30), width= 30, height= 30)
KeyF2.bind("<Button-1>", lambda event, args="F2": KeyPressLeft(event=event, key_name=args))
KeyF2.bind("<Button-3>", lambda event, args="F2": KeyPressRight(event=event, key_name=args))
(KeyF3 := Button(AutoHotKeyWindow, text = 'F3', bg="grey")).place(x = 20 + 3*(5 + 30), y = 90 + 0*(5 + 30), width= 30, height= 30)
KeyF3.bind("<Button-1>", lambda event, args="F3": KeyPressLeft(event=event, key_name=args))
KeyF3.bind("<Button-3>", lambda event, args="F3": KeyPressRight(event=event, key_name=args))
(KeyF4 := Button(AutoHotKeyWindow, text = 'F4', bg="grey")).place(x = 20 + 4*(5 + 30), y = 90 + 0*(5 + 30), width= 30, height= 30)
KeyF4.bind("<Button-1>", lambda event, args="F4": KeyPressLeft(event=event, key_name=args))
KeyF4.bind("<Button-3>", lambda event, args="F4": KeyPressRight(event=event, key_name=args))
# F5-F8
(KeyF5 := Button(AutoHotKeyWindow, text = 'F5', bg="grey")).place(x = 30 + 5*(5 + 30), y = 90 + 0*(5 + 30), width= 30, height= 30)
KeyF5.bind("<Button-1>", lambda event, args="F5": KeyPressLeft(event=event, key_name=args))
KeyF5.bind("<Button-3>", lambda event, args="F5": KeyPressRight(event=event, key_name=args))
(KeyF6 := Button(AutoHotKeyWindow, text = 'F6', bg="grey")).place(x = 30 + 6*(5 + 30), y = 90 + 0*(5 + 30), width= 30, height= 30)
KeyF6.bind("<Button-1>", lambda event, args="F6": KeyPressLeft(event=event, key_name=args))
KeyF6.bind("<Button-3>", lambda event, args="F6": KeyPressRight(event=event, key_name=args))
(KeyF7 := Button(AutoHotKeyWindow, text = 'F7', bg="grey")).place(x = 30 + 7*(5 + 30), y = 90 + 0*(5 + 30), width= 30, height= 30)
KeyF7.bind("<Button-1>", lambda event, args="F7": KeyPressLeft(event=event, key_name=args))
KeyF7.bind("<Button-3>", lambda event, args="F7": KeyPressRight(event=event, key_name=args))
(KeyF8 := Button(AutoHotKeyWindow, text = 'F8', bg="grey")).place(x = 30 + 8*(5 + 30), y = 90 + 0*(5 + 30), width= 30, height= 30)
KeyF8.bind("<Button-1>", lambda event, args="F8": KeyPressLeft(event=event, key_name=args))
KeyF8.bind("<Button-3>", lambda event, args="F8": KeyPressRight(event=event, key_name=args))
# F9-F12
(KeyF9 := Button(AutoHotKeyWindow, text = 'F9', bg="grey")).place(x = 40 + 9*(5 + 30), y = 90 + 0*(5 + 30), width= 30, height= 30)
KeyF9.bind("<Button-1>", lambda event, args="F9": KeyPressLeft(event=event, key_name=args))
KeyF9.bind("<Button-3>", lambda event, args="F9": KeyPressRight(event=event, key_name=args))
(KeyF10 := Button(AutoHotKeyWindow, text = 'F10', bg="grey")).place(x = 40 + 10*(5 + 30), y = 90 + 0*(5 + 30), width= 30, height= 30)
KeyF10.bind("<Button-1>", lambda event, args="F10": KeyPressLeft(event=event, key_name=args))
KeyF10.bind("<Button-3>", lambda event, args="F10": KeyPressRight(event=event, key_name=args))
(KeyF11 := Button(AutoHotKeyWindow, text = 'F11', bg="grey")).place(x = 40 + 11*(5 + 30), y = 90 + 0*(5 + 30), width= 30, height= 30)
KeyF11.bind("<Button-1>", lambda event, args="F11": KeyPressLeft(event=event, key_name=args))
KeyF11.bind("<Button-3>", lambda event, args="F11": KeyPressRight(event=event, key_name=args))
(KeyF12 := Button(AutoHotKeyWindow, text = 'F12', bg="grey")).place(x = 40 + 12*(5 + 30), y = 90 + 0*(5 + 30), width= 30, height= 30)
KeyF12.bind("<Button-1>", lambda event, args="F12": KeyPressLeft(event=event, key_name=args))
KeyF12.bind("<Button-3>", lambda event, args="F12": KeyPressRight(event=event, key_name=args))
# Func Buttons
(KeyPrintScreen := Button(AutoHotKeyWindow, text = 'Print\nScreen', bg="grey")).place(x = 50 + 13*(5 + 30) + 10*0 + 20, y = 90 + 0*(5 + 30), width= 40, height= 30)
KeyPrintScreen.bind("<Button-1>", lambda event, args="PrintScreen": KeyPressLeft(event=event, key_name=args))
KeyPrintScreen.bind("<Button-3>", lambda event, args="PrintScreen": KeyPressRight(event=event, key_name=args))
(KeyScrollLock := Button(AutoHotKeyWindow, text = 'Scroll\nLock', bg="grey")).place(x = 50 + 14*(5 + 30)+ 10*1 + 20, y = 90 + 0*(5 + 30), width= 40, height= 30)
KeyScrollLock.bind("<Button-1>", lambda event, args="ScrollLock": KeyPressLeft(event=event, key_name=args))
KeyScrollLock.bind("<Button-3>", lambda event, args="ScrollLock": KeyPressRight(event=event, key_name=args))
(KeyPauseBreak := Button(AutoHotKeyWindow, text = 'Pause\nBreak', bg="grey")).place(x = 50 + 15*(5 + 30)+ 10*2 + 20, y = 90 + 0*(5 + 30), width= 40, height= 30)
KeyPauseBreak.bind("<Button-1>", lambda event, args="Break": KeyPressLeft(event=event, key_name=args))
KeyPauseBreak.bind("<Button-3>", lambda event, args="Break": KeyPressRight(event=event, key_name=args))
#Others Buttons
(KeyPrintScreen := Button(AutoHotKeyWindow, text = 'Insert', bg="grey")).place(x = 50 + 13*(5 + 30) + 10*0 + 20, y = 90 + 1*(5 + 30) + 10, width= 40, height= 30)
KeyPrintScreen.bind("<Button-1>", lambda event, args="Insert": KeyPressLeft(event=event, key_name=args))
KeyPrintScreen.bind("<Button-3>", lambda event, args="Insert": KeyPressRight(event=event, key_name=args))
(KeyScrollLock := Button(AutoHotKeyWindow, text = 'Home', bg="grey")).place(x = 50 + 14*(5 + 30)+ 10*1 + 20, y = 90 + 1*(5 + 30) + 10, width= 40, height= 30)
KeyScrollLock.bind("<Button-1>", lambda event, args="Home": KeyPressLeft(event=event, key_name=args))
KeyScrollLock.bind("<Button-3>", lambda event, args="Home": KeyPressRight(event=event, key_name=args))
(KeyPauseBreak := Button(AutoHotKeyWindow, text = 'Page\nUp', bg="grey")).place(x = 50 + 15*(5 + 30)+ 10*2 + 20, y = 90 + 1*(5 + 30) + 10, width= 40, height= 30)
KeyPauseBreak.bind("<Button-1>", lambda event, args="PageUp": KeyPressLeft(event=event, key_name=args))
KeyPauseBreak.bind("<Button-3>", lambda event, args="PageUp": KeyPressRight(event=event, key_name=args))
(KeyPrintScreen := Button(AutoHotKeyWindow, text = 'Delete', bg="grey")).place(x = 50 + 13*(5 + 30) + 10*0 + 20, y = 90 + 2*(5 + 30) + 10, width= 40, height= 30)
KeyPrintScreen.bind("<Button-1>", lambda event, args="Delete": KeyPressLeft(event=event, key_name=args))
KeyPrintScreen.bind("<Button-3>", lambda event, args="Delete": KeyPressRight(event=event, key_name=args))
(KeyScrollLock := Button(AutoHotKeyWindow, text = 'End', bg="grey")).place(x = 50 + 14*(5 + 30)+ 10*1 + 20, y = 90 + 2*(5 + 30) + 10, width= 40, height= 30)
KeyScrollLock.bind("<Button-1>", lambda event, args="End": KeyPressLeft(event=event, key_name=args))
KeyScrollLock.bind("<Button-3>", lambda event, args="End": KeyPressRight(event=event, key_name=args))
(KeyPauseBreak := Button(AutoHotKeyWindow, text = 'Page\nDown', bg="grey")).place(x = 50 + 15*(5 + 30)+ 10*2 + 20, y = 90 + 2*(5 + 30) + 10, width= 40, height= 30)
KeyPauseBreak.bind("<Button-1>", lambda event, args="PageDown": KeyPressLeft(event=event, key_name=args))
KeyPauseBreak.bind("<Button-3>", lambda event, args="PageDown": KeyPressRight(event=event, key_name=args))
# Arrows
(KeyScrollLock := Button(AutoHotKeyWindow, text = '↑', bg="grey")).place(x = 50 + 14*(5 + 30)+ 10*1 + 20, y = 90 + 4*(5 + 30) + 10, width= 40, height= 30)
KeyScrollLock.bind("<Button-1>", lambda event, args="Up": KeyPressLeft(event=event, key_name=args))
KeyScrollLock.bind("<Button-3>", lambda event, args="Up": KeyPressRight(event=event, key_name=args))
(KeyPrintScreen := Button(AutoHotKeyWindow, text = '←', bg="grey")).place(x = 50 + 13*(5 + 30) + 10*0 + 20, y = 90 + 5*(5 + 30) + 10, width= 40, height= 30)
KeyPrintScreen.bind("<Button-1>", lambda event, args="Left": KeyPressLeft(event=event, key_name=args))
KeyPrintScreen.bind("<Button-3>", lambda event, args="Left": KeyPressRight(event=event, key_name=args))
(KeyScrollLock := Button(AutoHotKeyWindow, text = '↓', bg="grey")).place(x = 50 + 14*(5 + 30)+ 10*1 + 20, y = 90 + 5*(5 + 30) + 10, width= 40, height= 30)
KeyScrollLock.bind("<Button-1>", lambda event, args="Down": KeyPressLeft(event=event, key_name=args))
KeyScrollLock.bind("<Button-3>", lambda event, args="Down": KeyPressRight(event=event, key_name=args))
(KeyPauseBreak := Button(AutoHotKeyWindow, text = '→', bg="grey")).place(x = 50 + 15*(5 + 30)+ 10*2 + 20, y = 90 + 5*(5 + 30) + 10, width= 40, height= 30)
KeyPauseBreak.bind("<Button-1>", lambda event, args="Right": KeyPressLeft(event=event, key_name=args))
KeyPauseBreak.bind("<Button-3>", lambda event, args="Right": KeyPressRight(event=event, key_name=args))
# First Line
(KeyESC := Button(AutoHotKeyWindow, text = '~', bg="grey")).place(x = 10 + 0*(5 + 30), y = 90 + 1*(5 + 30) + 10, width= 30, height= 30)
KeyESC.bind("<Button-1>", lambda event, args="`": KeyPressLeft(event=event, key_name=args))
KeyESC.bind("<Button-3>", lambda event, args="`": KeyPressRight(event=event, key_name=args))
(KeyESC := Button(AutoHotKeyWindow, text = '1', bg="grey")).place(x = 10 + 1*(5 + 30), y = 90 + 1*(5 + 30) + 10, width= 30, height= 30)
KeyESC.bind("<Button-1>", lambda event, args="1": KeyPressLeft(event=event, key_name=args))
KeyESC.bind("<Button-3>", lambda event, args="1": KeyPressRight(event=event, key_name=args))
(KeyESC := Button(AutoHotKeyWindow, text = '2', bg="grey")).place(x = 10 + 2*(5 + 30), y = 90 + 1*(5 + 30) + 10, width= 30, height= 30)
KeyESC.bind("<Button-1>", lambda event, args="2": KeyPressLeft(event=event, key_name=args))
KeyESC.bind("<Button-3>", lambda event, args="2": KeyPressRight(event=event, key_name=args))
(KeyESC := Button(AutoHotKeyWindow, text = '3', bg="grey")).place(x = 10 + 3*(5 + 30), y = 90 + 1*(5 + 30) + 10, width= 30, height= 30)
KeyESC.bind("<Button-1>", lambda event, args="3": KeyPressLeft(event=event, key_name=args))
KeyESC.bind("<Button-3>", lambda event, args="3": KeyPressRight(event=event, key_name=args))
(KeyESC := Button(AutoHotKeyWindow, text = '4', bg="grey")).place(x = 10 + 4*(5 + 30), y = 90 + 1*(5 + 30) + 10, width= 30, height= 30)
KeyESC.bind("<Button-1>", lambda event, args="4": KeyPressLeft(event=event, key_name=args))
KeyESC.bind("<Button-3>", lambda event, args="4": KeyPressRight(event=event, key_name=args))
(KeyESC := Button(AutoHotKeyWindow, text = '5', bg="grey")).place(x = 10 + 5*(5 + 30), y = 90 + 1*(5 + 30) + 10, width= 30, height= 30)
KeyESC.bind("<Button-1>", lambda event, args="5": KeyPressLeft(event=event, key_name=args))
KeyESC.bind("<Button-3>", lambda event, args="5": KeyPressRight(event=event, key_name=args))
(KeyESC := Button(AutoHotKeyWindow, text = '6', bg="grey")).place(x = 10 + 6*(5 + 30), y = 90 + 1*(5 + 30) + 10, width= 30, height= 30)
KeyESC.bind("<Button-1>", lambda event, args="6": KeyPressLeft(event=event, key_name=args))
KeyESC.bind("<Button-3>", lambda event, args="6": KeyPressRight(event=event, key_name=args))
(KeyESC := Button(AutoHotKeyWindow, text = '7', bg="grey")).place(x = 10 + 7*(5 + 30), y = 90 + 1*(5 + 30) + 10, width= 30, height= 30)
KeyESC.bind("<Button-1>", lambda event, args="7": KeyPressLeft(event=event, key_name=args))
KeyESC.bind("<Button-3>", lambda event, args="7": KeyPressRight(event=event, key_name=args))
(KeyESC := Button(AutoHotKeyWindow, text = '8', bg="grey")).place(x = 10 + 8*(5 + 30), y = 90 + 1*(5 + 30) + 10, width= 30, height= 30)
KeyESC.bind("<Button-1>", lambda event, args="8": KeyPressLeft(event=event, key_name=args))
KeyESC.bind("<Button-3>", lambda event, args="8": KeyPressRight(event=event, key_name=args))
(KeyESC := Button(AutoHotKeyWindow, text = '9', bg="grey")).place(x = 10 + 9*(5 + 30), y = 90 + 1*(5 + 30) + 10, width= 30, height= 30)
KeyESC.bind("<Button-1>", lambda event, args="9": KeyPressLeft(event=event, key_name=args))
KeyESC.bind("<Button-3>", lambda event, args="9": KeyPressRight(event=event, key_name=args))
(KeyESC := Button(AutoHotKeyWindow, text = '0', bg="grey")).place(x = 10 + 10*(5 + 30), y = 90 + 1*(5 + 30) + 10, width= 30, height= 30)
KeyESC.bind("<Button-1>", lambda event, args="0": KeyPressLeft(event=event, key_name=args))
KeyESC.bind("<Button-3>", lambda event, args="0": KeyPressRight(event=event, key_name=args))
(KeyESC := Button(AutoHotKeyWindow, text = '-', bg="grey")).place(x = 10 + 11*(5 + 30), y = 90 + 1*(5 + 30) + 10, width= 30, height= 30)
KeyESC.bind("<Button-1>", lambda event, args="-": KeyPressLeft(event=event, key_name=args))
KeyESC.bind("<Button-3>", lambda event, args="-": KeyPressRight(event=event, key_name=args))
(KeyESC := Button(AutoHotKeyWindow, text = '=', bg="grey")).place(x = 10 + 12*(5 + 30), y = 90 + 1*(5 + 30) + 10, width= 30, height= 30)
KeyESC.bind("<Button-1>", lambda event, args="=": KeyPressLeft(event=event, key_name=args))
KeyESC.bind("<Button-3>", lambda event, args="=": KeyPressRight(event=event, key_name=args))
(KeyESC := Button(AutoHotKeyWindow, text = '<---', bg="grey")).place(x = 10 + 13*(5 + 30), y = 90 + 1*(5 + 30) + 10, width= 55, height= 30)
KeyESC.bind("<Button-1>", lambda event, args="Backspace": KeyPressLeft(event=event, key_name=args))
KeyESC.bind("<Button-3>", lambda event, args="Backspace": KeyPressRight(event=event, key_name=args))
# Second Line
(KeyESC := Button(AutoHotKeyWindow, text = 'Tab', bg="grey")).place(x = 10 + 0*(5 + 30), y = 90 + 2*(5 + 30) + 10, width= 40, height= 30)
KeyESC.bind("<Button-1>", lambda event, args="Tab": KeyPressLeft(event=event, key_name=args))
KeyESC.bind("<Button-3>", lambda event, args="Tab": KeyPressRight(event=event, key_name=args))
(KeyESC := Button(AutoHotKeyWindow, text = 'Q', bg="grey")).place(x = 10 + 1*(5 + 30) + 10, y = 90 + 2*(5 + 30) + 10, width= 30, height= 30)
KeyESC.bind("<Button-1>", lambda event, args="Q": KeyPressLeft(event=event, key_name=args))
KeyESC.bind("<Button-3>", lambda event, args="Q": KeyPressRight(event=event, key_name=args))
(KeyESC := Button(AutoHotKeyWindow, text = 'W', bg="grey")).place(x = 10 + 2*(5 + 30) + 10, y = 90 + 2*(5 + 30) + 10, width= 30, height= 30)
KeyESC.bind("<Button-1>", lambda event, args="W": KeyPressLeft(event=event, key_name=args))
KeyESC.bind("<Button-3>", lambda event, args="W": KeyPressRight(event=event, key_name=args))
(KeyESC := Button(AutoHotKeyWindow, text = 'E', bg="grey")).place(x = 10 + 3*(5 + 30) + 10, y = 90 + 2*(5 + 30) + 10, width= 30, height= 30)
KeyESC.bind("<Button-1>", lambda event, args="E": KeyPressLeft(event=event, key_name=args))
KeyESC.bind("<Button-3>", lambda event, args="E": KeyPressRight(event=event, key_name=args))
(KeyESC := Button(AutoHotKeyWindow, text = 'R', bg="grey")).place(x = 10 + 4*(5 + 30) + 10, y = 90 + 2*(5 + 30) + 10, width= 30, height= 30)
KeyESC.bind("<Button-1>", lambda event, args="R": KeyPressLeft(event=event, key_name=args))
KeyESC.bind("<Button-3>", lambda event, args="R": KeyPressRight(event=event, key_name=args))
(KeyESC := Button(AutoHotKeyWindow, text = 'T', bg="grey")).place(x = 10 + 5*(5 + 30) + 10, y = 90 + 2*(5 + 30) + 10, width= 30, height= 30)
KeyESC.bind("<Button-1>", lambda event, args="T": KeyPressLeft(event=event, key_name=args))
KeyESC.bind("<Button-3>", lambda event, args="T": KeyPressRight(event=event, key_name=args))
(KeyESC := Button(AutoHotKeyWindow, text = 'Y', bg="grey")).place(x = 10 + 6*(5 + 30) + 10, y = 90 + 2*(5 + 30) + 10, width= 30, height= 30)
KeyESC.bind("<Button-1>", lambda event, args="Y": KeyPressLeft(event=event, key_name=args))
KeyESC.bind("<Button-3>", lambda event, args="Y": KeyPressRight(event=event, key_name=args))
(KeyESC := Button(AutoHotKeyWindow, text = 'U', bg="grey")).place(x = 10 + 7*(5 + 30) + 10, y = 90 + 2*(5 + 30) + 10, width= 30, height= 30)
KeyESC.bind("<Button-1>", lambda event, args="U": KeyPressLeft(event=event, key_name=args))
KeyESC.bind("<Button-3>", lambda event, args="U": KeyPressRight(event=event, key_name=args))
(KeyESC := Button(AutoHotKeyWindow, text = 'I', bg="grey")).place(x = 10 + 8*(5 + 30) + 10, y = 90 + 2*(5 + 30) + 10, width= 30, height= 30)
KeyESC.bind("<Button-1>", lambda event, args="I": KeyPressLeft(event=event, key_name=args))
KeyESC.bind("<Button-3>", lambda event, args="I": KeyPressRight(event=event, key_name=args))
(KeyESC := Button(AutoHotKeyWindow, text = 'O', bg="grey")).place(x = 10 + 9*(5 + 30) + 10, y = 90 + 2*(5 + 30) + 10, width= 30, height= 30)
KeyESC.bind("<Button-1>", lambda event, args="O": KeyPressLeft(event=event, key_name=args))
KeyESC.bind("<Button-3>", lambda event, args="O": KeyPressRight(event=event, key_name=args))
(KeyESC := Button(AutoHotKeyWindow, text = 'P', bg="grey")).place(x = 10 + 10*(5 + 30) + 10, y = 90 + 2*(5 + 30) + 10, width= 30, height= 30)
KeyESC.bind("<Button-1>", lambda event, args="P": KeyPressLeft(event=event, key_name=args))
KeyESC.bind("<Button-3>", lambda event, args="P": KeyPressRight(event=event, key_name=args))
(KeyESC := Button(AutoHotKeyWindow, text = '[', bg="grey")).place(x = 10 + 11*(5 + 30) + 10, y = 90 + 2*(5 + 30) + 10, width= 30, height= 30)
KeyESC.bind("<Button-1>", lambda event, args="[": KeyPressLeft(event=event, key_name=args))
KeyESC.bind("<Button-3>", lambda event, args="[": KeyPressRight(event=event, key_name=args))
(KeyESC := Button(AutoHotKeyWindow, text = ']', bg="grey")).place(x = 10 + 12*(5 + 30) + 10, y = 90 + 2*(5 + 30) + 10, width= 30, height= 30)
KeyESC.bind("<Button-1>", lambda event, args="]": KeyPressLeft(event=event, key_name=args))
KeyESC.bind("<Button-3>", lambda event, args="]": KeyPressRight(event=event, key_name=args))
(KeyESC := Button(AutoHotKeyWindow, text = '\\', bg="grey")).place(x = 10 + 13*(5 + 30) + 10, y = 90 + 2*(5 + 30) + 10, width= 45, height= 30)
KeyESC.bind("<Button-1>", lambda event, args="\\": KeyPressLeft(event=event, key_name=args))
KeyESC.bind("<Button-3>", lambda event, args="\\": KeyPressRight(event=event, key_name=args))
# Third Line
(KeyESC := Button(AutoHotKeyWindow, text = 'CAPS', bg="grey")).place(x = 10 + 0*(5 + 30), y = 90 + 3*(5 + 30) + 10, width= 45, height= 30)
KeyESC.bind("<Button-1>", lambda event, args="CapsLock": KeyPressLeft(event=event, key_name=args))
KeyESC.bind("<Button-3>", lambda event, args="CapsLock": KeyPressRight(event=event, key_name=args))
(KeyESC := Button(AutoHotKeyWindow, text = 'A', bg="grey")).place(x = 10 + 1*(5 + 30) + 15, y = 90 + 3*(5 + 30) + 10, width= 30, height= 30)
KeyESC.bind("<Button-1>", lambda event, args="A": KeyPressLeft(event=event, key_name=args))
KeyESC.bind("<Button-3>", lambda event, args="A": KeyPressRight(event=event, key_name=args))
(KeyESC := Button(AutoHotKeyWindow, text = 'S', bg="grey")).place(x = 10 + 2*(5 + 30) + 15, y = 90 + 3*(5 + 30) + 10, width= 30, height= 30)
KeyESC.bind("<Button-1>", lambda event, args="S": KeyPressLeft(event=event, key_name=args))
KeyESC.bind("<Button-3>", lambda event, args="S": KeyPressRight(event=event, key_name=args))
(KeyESC := Button(AutoHotKeyWindow, text = 'D', bg="grey")).place(x = 10 + 3*(5 + 30) + 15, y = 90 + 3*(5 + 30) + 10, width= 30, height= 30)
KeyESC.bind("<Button-1>", lambda event, args="D": KeyPressLeft(event=event, key_name=args))
KeyESC.bind("<Button-3>", lambda event, args="D": KeyPressRight(event=event, key_name=args))
(KeyESC := Button(AutoHotKeyWindow, text = 'F', bg="grey")).place(x = 10 + 4*(5 + 30) + 15, y = 90 + 3*(5 + 30) + 10, width= 30, height= 30)
KeyESC.bind("<Button-1>", lambda event, args="F": KeyPressLeft(event=event, key_name=args))
KeyESC.bind("<Button-3>", lambda event, args="F": KeyPressRight(event=event, key_name=args))
(KeyESC := Button(AutoHotKeyWindow, text = 'G', bg="grey")).place(x = 10 + 5*(5 + 30) + 15, y = 90 + 3*(5 + 30) + 10, width= 30, height= 30)
KeyESC.bind("<Button-1>", lambda event, args="G": KeyPressLeft(event=event, key_name=args))
KeyESC.bind("<Button-3>", lambda event, args="G": KeyPressRight(event=event, key_name=args))
(KeyESC := Button(AutoHotKeyWindow, text = 'H', bg="grey")).place(x = 10 + 6*(5 + 30) + 15, y = 90 + 3*(5 + 30) + 10, width= 30, height= 30)
KeyESC.bind("<Button-1>", lambda event, args="H": KeyPressLeft(event=event, key_name=args))
KeyESC.bind("<Button-3>", lambda event, args="H": KeyPressRight(event=event, key_name=args))
(KeyESC := Button(AutoHotKeyWindow, text = 'J', bg="grey")).place(x = 10 + 7*(5 + 30) + 15, y = 90 + 3*(5 + 30) + 10, width= 30, height= 30)
KeyESC.bind("<Button-1>", lambda event, args="J": KeyPressLeft(event=event, key_name=args))
KeyESC.bind("<Button-3>", lambda event, args="J": KeyPressRight(event=event, key_name=args))
(KeyESC := Button(AutoHotKeyWindow, text = 'K', bg="grey")).place(x = 10 + 8*(5 + 30) + 15, y = 90 + 3*(5 + 30) + 10, width= 30, height= 30)
KeyESC.bind("<Button-1>", lambda event, args="K": KeyPressLeft(event=event, key_name=args))
KeyESC.bind("<Button-3>", lambda event, args="K": KeyPressRight(event=event, key_name=args))
(KeyESC := Button(AutoHotKeyWindow, text = 'L', bg="grey")).place(x = 10 + 9*(5 + 30) + 15, y = 90 + 3*(5 + 30) + 10, width= 30, height= 30)
KeyESC.bind("<Button-1>", lambda event, args="L": KeyPressLeft(event=event, key_name=args))
KeyESC.bind("<Button-3>", lambda event, args="L": KeyPressRight(event=event, key_name=args))
(KeyESC := Button(AutoHotKeyWindow, text = ';', bg="grey")).place(x = 10 + 10*(5 + 30) + 15, y = 90 + 3*(5 + 30) + 10, width= 30, height= 30)
KeyESC.bind("<Button-1>", lambda event, args=";": KeyPressLeft(event=event, key_name=args))
KeyESC.bind("<Button-3>", lambda event, args=";": KeyPressRight(event=event, key_name=args))
(KeyESC := Button(AutoHotKeyWindow, text = '\'', bg="grey")).place(x = 10 + 11*(5 + 30) + 15, y = 90 + 3*(5 + 30) + 10, width= 30, height= 30)
KeyESC.bind("<Button-1>", lambda event, args="'": KeyPressLeft(event=event, key_name=args))
KeyESC.bind("<Button-3>", lambda event, args="'": KeyPressRight(event=event, key_name=args))
(KeyESC := Button(AutoHotKeyWindow, text = 'Enter', bg="grey")).place(x = 10 + 12*(5 + 30) + 15, y = 90 + 3*(5 + 30) + 10, width= 75, height= 30)
KeyESC.bind("<Button-1>", lambda event, args="Enter": KeyPressLeft(event=event, key_name=args))
KeyESC.bind("<Button-3>", lambda event, args="Enter": KeyPressRight(event=event, key_name=args))
# Fourth Line
(KeyESC := Button(AutoHotKeyWindow, text = 'LShift', bg="grey")).place(x = 10 + 0*(5 + 30), y = 90 + 4*(5 + 30) + 10, width= 65, height= 30)
KeyESC.bind("<Button-1>", lambda event, args="LShift": KeyPressLeft(event=event, key_name=args))
KeyESC.bind("<Button-3>", lambda event, args="LShift": KeyPressRight(event=event, key_name=args))
(KeyESC := Button(AutoHotKeyWindow, text = 'Z', bg="grey")).place(x = 10 + 1*(5 + 30) + 35, y = 90 + 4*(5 + 30) + 10, width= 30, height= 30)
KeyESC.bind("<Button-1>", lambda event, args="Z": KeyPressLeft(event=event, key_name=args))
KeyESC.bind("<Button-3>", lambda event, args="Z": KeyPressRight(event=event, key_name=args))
(KeyESC := Button(AutoHotKeyWindow, text = 'X', bg="grey")).place(x = 10 + 2*(5 + 30) + 35, y = 90 + 4*(5 + 30) + 10, width= 30, height= 30)
KeyESC.bind("<Button-1>", lambda event, args="X": KeyPressLeft(event=event, key_name=args))
KeyESC.bind("<Button-3>", lambda event, args="X": KeyPressRight(event=event, key_name=args))
(KeyESC := Button(AutoHotKeyWindow, text = 'C', bg="grey")).place(x = 10 + 3*(5 + 30) + 35, y = 90 + 4*(5 + 30) + 10, width= 30, height= 30)
KeyESC.bind("<Button-1>", lambda event, args="C": KeyPressLeft(event=event, key_name=args))
KeyESC.bind("<Button-3>", lambda event, args="C": KeyPressRight(event=event, key_name=args))
(KeyESC := Button(AutoHotKeyWindow, text = 'V', bg="grey")).place(x = 10 + 4*(5 + 30) + 35, y = 90 + 4*(5 + 30) + 10, width= 30, height= 30)
KeyESC.bind("<Button-1>", lambda event, args="V": KeyPressLeft(event=event, key_name=args))
KeyESC.bind("<Button-3>", lambda event, args="V": KeyPressRight(event=event, key_name=args))
(KeyESC := Button(AutoHotKeyWindow, text = 'B', bg="grey")).place(x = 10 + 5*(5 + 30) + 35, y = 90 + 4*(5 + 30) + 10, width= 30, height= 30)
KeyESC.bind("<Button-1>", lambda event, args="B": KeyPressLeft(event=event, key_name=args))
KeyESC.bind("<Button-3>", lambda event, args="B": KeyPressRight(event=event, key_name=args))
(KeyESC := Button(AutoHotKeyWindow, text = 'N', bg="grey")).place(x = 10 + 6*(5 + 30) + 35, y = 90 + 4*(5 + 30) + 10, width= 30, height= 30)
KeyESC.bind("<Button-1>", lambda event, args="N": KeyPressLeft(event=event, key_name=args))
KeyESC.bind("<Button-3>", lambda event, args="N": KeyPressRight(event=event, key_name=args))
(KeyESC := Button(AutoHotKeyWindow, text = 'M', bg="grey")).place(x = 10 + 7*(5 + 30) + 35, y = 90 + 4*(5 + 30) + 10, width= 30, height= 30)
KeyESC.bind("<Button-1>", lambda event, args="M": KeyPressLeft(event=event, key_name=args))
KeyESC.bind("<Button-3>", lambda event, args="M": KeyPressRight(event=event, key_name=args))
(KeyESC := Button(AutoHotKeyWindow, text = ',', bg="grey")).place(x = 10 + 8*(5 + 30) + 35, y = 90 + 4*(5 + 30) + 10, width= 30, height= 30)
KeyESC.bind("<Button-1>", lambda event, args=",": KeyPressLeft(event=event, key_name=args))
KeyESC.bind("<Button-3>", lambda event, args=",": KeyPressRight(event=event, key_name=args))
(KeyESC := Button(AutoHotKeyWindow, text = '.', bg="grey")).place(x = 10 + 9*(5 + 30) + 35, y = 90 + 4*(5 + 30) + 10, width= 30, height= 30)
KeyESC.bind("<Button-1>", lambda event, args=".": KeyPressLeft(event=event, key_name=args))
KeyESC.bind("<Button-3>", lambda event, args=".": KeyPressRight(event=event, key_name=args))
(KeyESC := Button(AutoHotKeyWindow, text = '/', bg="grey")).place(x = 10 + 10*(5 + 30) + 35, y = 90 + 4*(5 + 30) + 10, width= 30, height= 30)
KeyESC.bind("<Button-1>", lambda event, args="/": KeyPressLeft(event=event, key_name=args))
KeyESC.bind("<Button-3>", lambda event, args="/": KeyPressRight(event=event, key_name=args))
(KeyESC := Button(AutoHotKeyWindow, text = 'RShift', bg="grey")).place(x = 10 + 11*(5 + 30) + 35, y = 90 + 4*(5 + 30) + 10, width= 90, height= 30)
KeyESC.bind("<Button-1>", lambda event, args="RShift": KeyPressLeft(event=event, key_name=args))
KeyESC.bind("<Button-3>", lambda event, args="RShift": KeyPressRight(event=event, key_name=args))
# Fifth Line
(KeyESC := Button(AutoHotKeyWindow, text = 'LCTRL', bg="grey")).place(x = 10 + 0*(5 + 45), y = 90 + 5*(5 + 30) + 10, width= 45, height= 30)
KeyESC.bind("<Button-1>", lambda event, args="LControl": KeyPressLeft(event=event, key_name=args))
KeyESC.bind("<Button-3>", lambda event, args="LControl": KeyPressRight(event=event, key_name=args))
(KeyESC := Button(AutoHotKeyWindow, text = 'WIN', bg="grey")).place(x = 10 + 1*(5 + 45), y = 90 + 5*(5 + 30) + 10, width= 45, height= 30)
KeyESC.bind("<Button-1>", lambda event, args="LWin": KeyPressLeft(event=event, key_name=args))
KeyESC.bind("<Button-3>", lambda event, args="LWin": KeyPressRight(event=event, key_name=args))
(KeyESC := Button(AutoHotKeyWindow, text = 'LAlt', bg="grey")).place(x = 10 + 2*(5 + 45), y = 90 + 5*(5 + 30) + 10, width= 45, height= 30)
KeyESC.bind("<Button-1>", lambda event, args="LAlt": KeyPressLeft(event=event, key_name=args))
KeyESC.bind("<Button-3>", lambda event, args="LAlt": KeyPressRight(event=event, key_name=args))
(KeyESC := Button(AutoHotKeyWindow, text = 'Space', bg="grey")).place(x = 10 + 3*(5 + 45), y = 90 + 5*(5 + 30) + 10, width= 210, height= 30)
KeyESC.bind("<Button-1>", lambda event, args="Space": KeyPressLeft(event=event, key_name=args))
KeyESC.bind("<Button-3>", lambda event, args="Space": KeyPressRight(event=event, key_name=args))
(KeyESC := Button(AutoHotKeyWindow, text = 'RAlt', bg="grey")).place(x = 10 + 4*(5 + 45) + 165, y = 90 + 5*(5 + 30) + 10, width= 45, height= 30)
KeyESC.bind("<Button-1>", lambda event, args="RAlt": KeyPressLeft(event=event, key_name=args))
KeyESC.bind("<Button-3>", lambda event, args="RAlt": KeyPressRight(event=event, key_name=args))
(KeyESC := Button(AutoHotKeyWindow, text = 'Menu', bg="grey")).place(x = 10 + 5*(5 + 45) + 165, y = 90 + 5*(5 + 30) + 10, width= 45, height= 30)
KeyESC.bind("<Button-1>", lambda event, args="AppsKey": KeyPressLeft(event=event, key_name=args))
KeyESC.bind("<Button-3>", lambda event, args="AppsKey": KeyPressRight(event=event, key_name=args))
(KeyESC := Button(AutoHotKeyWindow, text = 'RCTRL', bg="grey")).place(x = 10 + 6*(5 + 45) + 165, y = 90 + 5*(5 + 30) + 10, width= 45, height= 30)
KeyESC.bind("<Button-1>", lambda event, args="RControl": KeyPressLeft(event=event, key_name=args))
KeyESC.bind("<Button-3>", lambda event, args="RControl": KeyPressRight(event=event, key_name=args))
# Multimedia Buttons
(KeyESC := Button(AutoHotKeyWindow, text = 'Browser\nBack', bg="grey")).place(x = 10 + 0*(5 + 50), y = 90 + 7*(5 + 30) + 10, width= 50, height= 50)
KeyESC.bind("<Button-1>", lambda event, args="Browser_Back": KeyPressLeft(event=event, key_name=args))
KeyESC.bind("<Button-3>", lambda event, args="Browser_Back": KeyPressRight(event=event, key_name=args))
(KeyESC := Button(AutoHotKeyWindow, text = 'Browser\nForward', bg="grey")).place(x = 10 + 1*(5 + 50), y = 90 + 7*(5 + 30) + 10, width= 50, height= 50)
KeyESC.bind("<Button-1>", lambda event, args="Browser_Forward": KeyPressLeft(event=event, key_name=args))
KeyESC.bind("<Button-3>", lambda event, args="Browser_Forward": KeyPressRight(event=event, key_name=args))
(KeyESC := Button(AutoHotKeyWindow, text = 'Browser\nRefresh', bg="grey")).place(x = 10 + 2*(5 + 50), y = 90 + 7*(5 + 30) + 10, width= 50, height= 50)
KeyESC.bind("<Button-1>", lambda event, args="Browser_Refresh": KeyPressLeft(event=event, key_name=args))
KeyESC.bind("<Button-3>", lambda event, args="Browser_Refresh": KeyPressRight(event=event, key_name=args))
(KeyESC := Button(AutoHotKeyWindow, text = 'Browser\nStop', bg="grey")).place(x = 10 + 3*(5 + 50), y = 90 + 7*(5 + 30) + 10, width= 50, height= 50)
KeyESC.bind("<Button-1>", lambda event, args="Browser_Stop": KeyPressLeft(event=event, key_name=args))
KeyESC.bind("<Button-3>", lambda event, args="Browser_Stop": KeyPressRight(event=event, key_name=args))
(KeyESC := Button(AutoHotKeyWindow, text = 'Browser\nSearch', bg="grey")).place(x = 10 + 4*(5 + 50), y = 90 + 7*(5 + 30) + 10, width= 50, height= 50)
KeyESC.bind("<Button-1>", lambda event, args="Browser_Search": KeyPressLeft(event=event, key_name=args))
KeyESC.bind("<Button-3>", lambda event, args="Browser_Search": KeyPressRight(event=event, key_name=args))
(KeyESC := Button(AutoHotKeyWindow, text = 'Browser\nFavorite', bg="grey")).place(x = 10 + 5*(5 + 50), y = 90 + 7*(5 + 30) + 10, width= 50, height= 50)
KeyESC.bind("<Button-1>", lambda event, args="Browser_Favorites": KeyPressLeft(event=event, key_name=args))
KeyESC.bind("<Button-3>", lambda event, args="Browser_Favorites": KeyPressRight(event=event, key_name=args))
(KeyESC := Button(AutoHotKeyWindow, text = 'Browser\nHome', bg="grey")).place(x = 10 + 6*(5 + 50), y = 90 + 7*(5 + 30) + 10, width= 50, height= 50)
KeyESC.bind("<Button-1>", lambda event, args="Browser_Home": KeyPressLeft(event=event, key_name=args))
KeyESC.bind("<Button-3>", lambda event, args="Browser_Home": KeyPressRight(event=event, key_name=args))
(KeyESC := Button(AutoHotKeyWindow, text = 'Volume\nMute', bg="grey")).place(x = 10 + 7*(5 + 50), y = 90 + 7*(5 + 30) + 10, width= 50, height= 50)
KeyESC.bind("<Button-1>", lambda event, args="Volume_Mute": KeyPressLeft(event=event, key_name=args))
KeyESC.bind("<Button-3>", lambda event, args="Volume_Mute": KeyPressRight(event=event, key_name=args))
(KeyESC := Button(AutoHotKeyWindow, text = 'Volume\nDown', bg="grey")).place(x = 10 + 8*(5 + 50), y = 90 + 7*(5 + 30) + 10, width= 50, height= 50)
KeyESC.bind("<Button-1>", lambda event, args="Volume_Down": KeyPressLeft(event=event, key_name=args))
KeyESC.bind("<Button-3>", lambda event, args="Volume_Down": KeyPressRight(event=event, key_name=args))
(KeyESC := Button(AutoHotKeyWindow, text = 'Volume\nUp', bg="grey")).place(x = 10 + 9*(5 + 50), y = 90 + 7*(5 + 30) + 10, width= 50, height= 50)
KeyESC.bind("<Button-1>", lambda event, args="Volume_Up": KeyPressLeft(event=event, key_name=args))
KeyESC.bind("<Button-3>", lambda event, args="Volume_Up": KeyPressRight(event=event, key_name=args))
(KeyESC := Button(AutoHotKeyWindow, text = 'Media\nNext', bg="grey")).place(x = 10 + 10*(5 + 50), y = 90 + 7*(5 + 30) + 10, width= 50, height= 50)
KeyESC.bind("<Button-1>", lambda event, args="Media_Next": KeyPressLeft(event=event, key_name=args))
KeyESC.bind("<Button-3>", lambda event, args="Media_Next": KeyPressRight(event=event, key_name=args))
(KeyESC := Button(AutoHotKeyWindow, text = 'Media\nPrev', bg="grey")).place(x = 10 + 11*(5 + 50), y = 90 + 7*(5 + 30) + 10, width= 50, height= 50)
KeyESC.bind("<Button-1>", lambda event, args="Media_Prev": KeyPressLeft(event=event, key_name=args))
KeyESC.bind("<Button-3>", lambda event, args="Media_Prev": KeyPressRight(event=event, key_name=args))
(KeyESC := Button(AutoHotKeyWindow, text = 'Media\nStop', bg="grey")).place(x = 10 + 12*(5 + 50), y = 90 + 7*(5 + 30) + 10, width= 50, height= 50)
KeyESC.bind("<Button-1>", lambda event, args="Media_Stop": KeyPressLeft(event=event, key_name=args))
KeyESC.bind("<Button-3>", lambda event, args="Media_Stop": KeyPressRight(event=event, key_name=args))
(KeyESC := Button(AutoHotKeyWindow, text = 'Media\nSwitch', bg="grey")).place(x = 10 + 13*(5 + 50), y = 90 + 7*(5 + 30) + 10, width= 50, height= 50)
KeyESC.bind("<Button-1>", lambda event, args="Media_Play_Pause": KeyPressLeft(event=event, key_name=args))
KeyESC.bind("<Button-3>", lambda event, args="Media_Play_Pause": KeyPressRight(event=event, key_name=args))
(KeyESC := Button(AutoHotKeyWindow, text = 'Launch\nMail', bg="grey")).place(x = 10 + 14*(5 + 50), y = 90 + 7*(5 + 30) + 10, width= 50, height= 50)
KeyESC.bind("<Button-1>", lambda event, args="Launch_Mail": KeyPressLeft(event=event, key_name=args))
KeyESC.bind("<Button-3>", lambda event, args="Launch_Mail": KeyPressRight(event=event, key_name=args))
(KeyESC := Button(AutoHotKeyWindow, text = 'Launch\nMedia', bg="grey")).place(x = 10 + 15*(5 + 50), y = 90 + 7*(5 + 30) + 10, width= 50, height= 50)
KeyESC.bind("<Button-1>", lambda event, args="Launch_Media": KeyPressLeft(event=event, key_name=args))
KeyESC.bind("<Button-3>", lambda event, args="Launch_Media": KeyPressRight(event=event, key_name=args))
(KeyESC := Button(AutoHotKeyWindow, text = 'Launch\nApp1', bg="grey")).place(x = 10 + 16*(5 + 50), y = 90 + 7*(5 + 30) + 10, width= 50, height= 50)
KeyESC.bind("<Button-1>", lambda event, args="Launch_App1": KeyPressLeft(event=event, key_name=args))
KeyESC.bind("<Button-3>", lambda event, args="Launch_App1": KeyPressRight(event=event, key_name=args))
(KeyESC := Button(AutoHotKeyWindow, text = 'Launch\nApp2', bg="grey")).place(x = 10 + 17*(5 + 50), y = 90 + 7*(5 + 30) + 10, width= 50, height= 50)
KeyESC.bind("<Button-1>", lambda event, args="Launch_App2": KeyPressLeft(event=event, key_name=args))
KeyESC.bind("<Button-3>", lambda event, args="Launch_App2": KeyPressRight(event=event, key_name=args))
# NumPad All
(KeyPrintScreen := Button(AutoHotKeyWindow, text = 'NUM\nLOCK', bg="grey")).place(x = 50 + 17*(5 + 30) + 10*0 + 20, y = 90 + 1*(5 + 30) + 10, width= 40, height= 30)
KeyPrintScreen.bind("<Button-1>", lambda event, args="NumLock": KeyPressLeft(event=event, key_name=args))
KeyPrintScreen.bind("<Button-3>", lambda event, args="NumLock": KeyPressRight(event=event, key_name=args))
(KeyScrollLock := Button(AutoHotKeyWindow, text = '/', bg="grey")).place(x = 50 + 18*(5 + 30)+ 10*1 + 20, y = 90 + 1*(5 + 30) + 10, width= 40, height= 30)
KeyScrollLock.bind("<Button-1>", lambda event, args="NumpadDiv": KeyPressLeft(event=event, key_name=args))
KeyScrollLock.bind("<Button-3>", lambda event, args="NumpadDiv": KeyPressRight(event=event, key_name=args))
(KeyPauseBreak := Button(AutoHotKeyWindow, text = '*', bg="grey")).place(x = 50 + 19*(5 + 30)+ 10*2 + 20, y = 90 + 1*(5 + 30) + 10, width= 40, height= 30)
KeyPauseBreak.bind("<Button-1>", lambda event, args="NumpadMult": KeyPressLeft(event=event, key_name=args))
KeyPauseBreak.bind("<Button-3>", lambda event, args="NumpadMult": KeyPressRight(event=event, key_name=args))
(KeyPrintScreen := Button(AutoHotKeyWindow, text = '7', bg="grey")).place(x = 50 + 17*(5 + 30) + 10*0 + 20, y = 90 + 2*(5 + 30) + 10, width= 40, height= 30)
KeyPrintScreen.bind("<Button-1>", lambda event, args="Numpad7": KeyPressLeft(event=event, key_name=args))
KeyPrintScreen.bind("<Button-3>", lambda event, args="Numpad7": KeyPressRight(event=event, key_name=args))
(KeyScrollLock := Button(AutoHotKeyWindow, text = '8', bg="grey")).place(x = 50 + 18*(5 + 30)+ 10*1 + 20, y = 90 + 2*(5 + 30) + 10, width= 40, height= 30)
KeyScrollLock.bind("<Button-1>", lambda event, args="Numpad8": KeyPressLeft(event=event, key_name=args))
KeyScrollLock.bind("<Button-3>", lambda event, args="Numpad8": KeyPressRight(event=event, key_name=args))
(KeyPauseBreak := Button(AutoHotKeyWindow, text = '9', bg="grey")).place(x = 50 + 19*(5 + 30)+ 10*2 + 20, y = 90 + 2*(5 + 30) + 10, width= 40, height= 30)
KeyPauseBreak.bind("<Button-1>", lambda event, args="Numpad9": KeyPressLeft(event=event, key_name=args))
KeyPauseBreak.bind("<Button-3>", lambda event, args="Numpad9": KeyPressRight(event=event, key_name=args))
(KeyPrintScreen := Button(AutoHotKeyWindow, text = '4', bg="grey")).place(x = 50 + 17*(5 + 30) + 10*0 + 20, y = 90 + 3*(5 + 30) + 10, width= 40, height= 30)
KeyPrintScreen.bind("<Button-1>", lambda event, args="Numpad4": KeyPressLeft(event=event, key_name=args))
KeyPrintScreen.bind("<Button-3>", lambda event, args="Numpad4": KeyPressRight(event=event, key_name=args))
(KeyScrollLock := Button(AutoHotKeyWindow, text = '5', bg="grey")).place(x = 50 + 18*(5 + 30)+ 10*1 + 20, y = 90 + 3*(5 + 30) + 10, width= 40, height= 30)
KeyScrollLock.bind("<Button-1>", lambda event, args="Numpad5": KeyPressLeft(event=event, key_name=args))
KeyScrollLock.bind("<Button-3>", lambda event, args="Numpad5": KeyPressRight(event=event, key_name=args))
(KeyPauseBreak := Button(AutoHotKeyWindow, text = '6', bg="grey")).place(x = 50 + 19*(5 + 30)+ 10*2 + 20, y = 90 + 3*(5 + 30) + 10, width= 40, height= 30)
KeyPauseBreak.bind("<Button-1>", lambda event, args="Numpad6": KeyPressLeft(event=event, key_name=args))
KeyPauseBreak.bind("<Button-3>", lambda event, args="Numpad6": KeyPressRight(event=event, key_name=args))
(KeyPrintScreen := Button(AutoHotKeyWindow, text = '1', bg="grey")).place(x = 50 + 17*(5 + 30) + 10*0 + 20, y = 90 + 4*(5 + 30) + 10, width= 40, height= 30)
KeyPrintScreen.bind("<Button-1>", lambda event, args="Numpad1": KeyPressLeft(event=event, key_name=args))
KeyPrintScreen.bind("<Button-3>", lambda event, args="Numpad1": KeyPressRight(event=event, key_name=args))
(KeyScrollLock := Button(AutoHotKeyWindow, text = '2', bg="grey")).place(x = 50 + 18*(5 + 30)+ 10*1 + 20, y = 90 + 4*(5 + 30) + 10, width= 40, height= 30)
KeyScrollLock.bind("<Button-1>", lambda event, args="Numpad2": KeyPressLeft(event=event, key_name=args))
KeyScrollLock.bind("<Button-3>", lambda event, args="Numpad2": KeyPressRight(event=event, key_name=args))
(KeyPauseBreak := Button(AutoHotKeyWindow, text = '3', bg="grey")).place(x = 50 + 19*(5 + 30)+ 10*2 + 20, y = 90 + 4*(5 + 30) + 10, width= 40, height= 30)
KeyPauseBreak.bind("<Button-1>", lambda event, args="Numpad3": KeyPressLeft(event=event, key_name=args))
KeyPauseBreak.bind("<Button-3>", lambda event, args="Numpad3": KeyPressRight(event=event, key_name=args))
(KeyPrintScreen := Button(AutoHotKeyWindow, text = '0', bg="grey")).place(x = 50 + 17*(5 + 30) + 10*0 + 20, y = 90 + 5*(5 + 30) + 10, width= 85, height= 30)
KeyPrintScreen.bind("<Button-1>", lambda event, args="Numpad0": KeyPressLeft(event=event, key_name=args))
KeyPrintScreen.bind("<Button-3>", lambda event, args="Numpad0": KeyPressRight(event=event, key_name=args))
(KeyPauseBreak := Button(AutoHotKeyWindow, text = '.', bg="grey")).place(x = 50 + 19*(5 + 30)+ 10*2 + 20, y = 90 + 5*(5 + 30) + 10, width= 40, height= 30)
KeyPauseBreak.bind("<Button-1>", lambda event, args="NumpadDot": KeyPressLeft(event=event, key_name=args))
KeyPauseBreak.bind("<Button-3>", lambda event, args="NumpadDot": KeyPressRight(event=event, key_name=args))
# NumPad Right
(KeyPauseBreak := Button(AutoHotKeyWindow, text = '-', bg="grey")).place(x = 50 + 20*(5 + 30)+ 10*3 + 20, y = 90 + 1*(5 + 30) + 10, width= 40, height= 30)
KeyPauseBreak.bind("<Button-1>", lambda event, args="NumpadSub": KeyPressLeft(event=event, key_name=args))
KeyPauseBreak.bind("<Button-3>", lambda event, args="NumpadSub": KeyPressRight(event=event, key_name=args))
(KeyPrintScreen := Button(AutoHotKeyWindow, text = '+', bg="grey")).place(x = 50 + 20*(5 + 30) + 10*3 + 20, y = 90 + 2*(5 + 30) + 10, width= 40, height= 65)
KeyPrintScreen.bind("<Button-1>", lambda event, args="NumpadAdd": KeyPressLeft(event=event, key_name=args))
KeyPrintScreen.bind("<Button-3>", lambda event, args="NumpadAdd": KeyPressRight(event=event, key_name=args))
(KeyPauseBreak := Button(AutoHotKeyWindow, text = 'Enter', bg="grey")).place(x = 50 + 20*(5 + 30)+ 10*3 + 20, y = 90 + 4*(5 + 30) + 10, width= 40, height= 65)
KeyPauseBreak.bind("<Button-1>", lambda event, args="NumpadEnter": KeyPressLeft(event=event, key_name=args))
KeyPauseBreak.bind("<Button-3>", lambda event, args="NumpadEnter": KeyPressRight(event=event, key_name=args))
# Mouse
CanvasWindow.create_line(23*(5 + 30)+ 10*3 + 30 + 10, 
                         90 + 1*(5 + 30) + 10, 
                         27*(5 + 30)+ 10*3 + 10, 
                         90 + 1*(5 + 30) + 10, 
                         width=3)
CanvasWindow.create_line(23*(5 + 30)+ 10*3 + 30 + 10, 
                         90 + 6*(5 + 30) + 10, 
                         27*(5 + 30)+ 10*3 + 10, 
                         90 + 6*(5 + 30) + 10, 
                         width=3)
CanvasWindow.create_line(23*(5 + 30)+ 10*3 + 30 + 10, 
                         90 + 3*(5 + 30) + 10, 
                         27*(5 + 30)+ 10*3 + 10, 
                         90 + 3*(5 + 30) + 10, 
                         width=3)
CanvasWindow.create_line(23*(5 + 30)+ 10*3 + 30 + 10, 
                         90 + 1*(5 + 30) + 10, 
                         23*(5 + 30)+ 10*3 + 30 + 10, 
                         90 + 6*(5 + 30) + 10, 
                         width=3)
CanvasWindow.create_line(27*(5 + 30)+ 10*3 + 10, 
                         90 + 1*(5 + 30) + 10, 
                         27*(5 + 30)+ 10*3 + 10, 
                         90 + 6*(5 + 30) + 10, 
                         width=3)
CanvasWindow.create_line(((23*(5 + 30)+ 10*3 + 30 + 10) + (27*(5 + 30)+ 10*3 + 10))//2 - 10, 
                         90 + 1*(5 + 30) + 10, 
                         ((23*(5 + 30)+ 10*3 + 30 + 10) + (27*(5 + 30)+ 10*3 + 10))//2 - 10, 
                         90 + 3*(5 + 30) + 10, 
                         width=3)
CanvasWindow.create_line(((23*(5 + 30)+ 10*3 + 30 + 10) + (27*(5 + 30)+ 10*3 + 10))//2 + 10, 
                         90 + 1*(5 + 30) + 10, 
                         ((23*(5 + 30)+ 10*3 + 30 + 10) + (27*(5 + 30)+ 10*3 + 10))//2 + 10, 
                         90 + 3*(5 + 30) + 10, 
                         width=3)
(KeyPauseBreak := Button(AutoHotKeyWindow, text = '', bg="grey")).place(x = (23*(5 + 30)+ 10*3 + 30 + 10) + 3, y = 90 + 1*(5 + 30) + 10 + 3, width= 39, height= 64)
KeyPauseBreak.bind("<Button-1>", lambda event, args="LButton": KeyPressLeft(event=event, key_name=args))
KeyPauseBreak.bind("<Button-3>", lambda event, args="LButton": KeyPressRight(event=event, key_name=args))
(KeyPrintScreen := Button(AutoHotKeyWindow, text = '↑', bg="grey")).place(x = (23*(5 + 30)+ 10*3 + 30 + 10) + 3 + 40 + 6, y = 90 + 1*(5 + 30) + 10 + 3, width= 13, height= 21)
KeyPrintScreen.bind("<Button-1>", lambda event, args="WheelUp": KeyPressLeft(event=event, key_name=args))
KeyPrintScreen.bind("<Button-3>", lambda event, args="WheelUp": KeyPressRight(event=event, key_name=args))
(KeyPrintScreen := Button(AutoHotKeyWindow, text = '', bg="grey")).place(x = (23*(5 + 30)+ 10*3 + 30 + 10) + 3 + 40 + 6, y = 90 + 1*(5 + 30) + 10 + 3 + 21, width= 13, height= 23)
KeyPrintScreen.bind("<Button-1>", lambda event, args="MButton": KeyPressLeft(event=event, key_name=args))
KeyPrintScreen.bind("<Button-3>", lambda event, args="MButton": KeyPressRight(event=event, key_name=args))
(KeyPrintScreen := Button(AutoHotKeyWindow, text = '↓', bg="grey")).place(x = (23*(5 + 30)+ 10*3 + 30 + 10) + 3 + 40 + 6, y = 90 + 1*(5 + 30) + 10 + 3 + 44, width= 13, height= 21)
KeyPrintScreen.bind("<Button-1>", lambda event, args="WheelDown": KeyPressLeft(event=event, key_name=args))
KeyPrintScreen.bind("<Button-3>", lambda event, args="WheelDown": KeyPressRight(event=event, key_name=args))
(KeyPauseBreak := Button(AutoHotKeyWindow, text = '', bg="grey")).place(x = (23*(5 + 30)+ 10*3 + 30 + 10) + 3 + 44 + 16 + 6, y = 90 + 1*(5 + 30) + 10 + 3, width= 39, height= 64)
KeyPauseBreak.bind("<Button-1>", lambda event, args="RButton": KeyPressLeft(event=event, key_name=args))
KeyPauseBreak.bind("<Button-3>", lambda event, args="RButton": KeyPressRight(event=event, key_name=args))
(KeyPrintScreen := Button(AutoHotKeyWindow, text = '', bg="grey")).place(x = (23*(5 + 30)+ 10*3) + 30, y = 90 + 2*(5 + 30) + 10 + 3 , width= 8, height= 30)
KeyPrintScreen.bind("<Button-1>", lambda event, args="XButton2": KeyPressLeft(event=event, key_name=args))
KeyPrintScreen.bind("<Button-3>", lambda event, args="XButton2": KeyPressRight(event=event, key_name=args))
(KeyPrintScreen := Button(AutoHotKeyWindow, text = '', bg="grey")).place(x = (23*(5 + 30)+ 10*3) + 30, y = 90 + 3*(5 + 30) + 10 + 3, width= 8, height= 30)
KeyPrintScreen.bind("<Button-1>", lambda event, args="XButton1": KeyPressLeft(event=event, key_name=args))
KeyPrintScreen.bind("<Button-3>", lambda event, args="XButton1": KeyPressRight(event=event, key_name=args))
# Main Program
AutoHotKeyWindow.mainloop()